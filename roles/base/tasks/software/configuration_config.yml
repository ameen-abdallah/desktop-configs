- name: System configuration | core packages | monitor configuration
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'monitor=,preferred,auto,auto'
    line: |-
      monitor=DP-1,1920x1080@60,0x0,1
      monitor=HDMI-A-1,1920x1080@60,1920x0,1
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: "{{ item.regex }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - line: '$terminal = ghostty'
      regex: "\\$terminal = kitty"
    - line: '$fileManager = dolphin'
      regex: "\\$fileManager = dolphin"
    - line: '$browser = brave'
      regex: "\\$menu = wofi"

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    line: "{{ item.line }}"
    insertafter: "\\$browser = brave"
    state: present
  loop:
    - line: '$menu = fuzzel'
    - line: '$editor = code'

- name: Enable sddm
  become: true
  ansible.builtin.systemd:
    name: sddm.service
    enabled: true

- name: Set Fish as the default shell for the user
  ansible.builtin.user:
    name: '{{ username_on_the_host.stdout }}'
    shell: /usr/bin/fish
  become: true

- name: Insert a block of text before a specific pattern
  ansible.builtin.blockinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    block: |
      exec-once=/usr/lib/polkit-kde-authentication-agent-1 # Polkit for privilege management      insertbefore: 'env = XCURSOR_SIZE,24'
      exec-once=/usr/bin/dunst
      exec-once=waybar
      exec-once = swww-daemon
      exec-once = swww img ~/.config/assets/backgrounds/still-body-water.jpg  --transition-fps 255 --transition-type outer --transition-duration 0.8
      exec-once = hypridle
    marker: '# {mark} Exec once | ANSIBLE MANAGED BLOCK'
    prepend_newline: true
    insertafter: "# exec-once = waybar \\& hyprpaper \\& firefox"
    state: present

- name: Insert a block of text before a specific pattern
  ansible.builtin.blockinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    block: |
      # QT
      env = QT_QPA_PLATFORM,wayland;xcb
      env = QT_QPA_PLATFORMTHEME,qt6ct
      env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
      env = QT_AUTO_SCREEN_SCALE_FACTOR,1
      env = QT_STYLE_OVERRIDE,kvantum

      # Toolkit Backend Variables
      env = GDK_BACKEND,wayland,x11,*
      env = SDL_VIDEODRIVER,wayland
      env = CLUTTER_BACKEND,wayland

      # XDG Specifications
      env = XDG_CURRENT_DESKTOP,Hyprland
      env = XDG_SESSION_TYPE,wayland
      env = XDG_SESSION_DESKTOP,Hyprland
    marker: '# {mark} Environment Variable | ANSIBLE MANAGED BLOCK'
    prepend_newline: true
    insertafter: 'env = HYPRCURSOR_SIZE,24'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'    
    insertafter: '# Example binds'
    line: "{{ item.line }}"
    state: present
  loop:
    - line: 'bind = $mainMod, RETURN, exec, $terminal'
    - line: 'bind = $mainMod, B, exec, $browser'
    - line: 'bind = $mainMod, A, exec, $menu'
    - line: 'bind = Ctrl, Escape, exec, killall waybar || waybar'
    - line: "bind = $mainMod, L, exec, hyprlock"
    - line: "bind = CTRL ALT, X, exec, hyprctl dispatch exit"

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'    
    regex: "{{ item.regex }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - line: 'bind = $mainMod, M, fullscreen, 1'
      regex: "bind = \\$mainMod, M, exit,"
    - line: 'bind = $mainMod, Q, killactive,'
      regex: "bind = \\$mainMod, Q, exec, \\$terminal"
    - line: 'bind = $mainMod, V, exec, code'
      regex: "bind = \\$mainMod, V, togglefloating,,"

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'kb_layout = us'
    line: 'kb_layout = dk'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'natural_scroll = false'
    line: 'natural_scroll = true'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'workspace_swipe = false'
    line: 'workspace_swipe = true'
    state: present

- name: Insert a block of text before a specific pattern
  ansible.builtin.copy:
    dest: '/home/{{ username_on_the_host.stdout }}/.config/waybar/config.jsonc'
    content: |
      {
        "position": "top",
        "modules-left": ["hyprland/workspaces"],
        "modules-center": ["hyprland/window"],
        "modules-right": ["network", "pulseaudio", "battery", "clock"],
        "clock": {
          "format": "<span foreground='#f5c2e7'>   </span>{:%a %d %H:%M}",
          "tooltip-format": "<big>{:%Y %B}</big>\n<tt><small>{calendar}</small></tt>"
        },
        "battery": {
          "states": {
            "warning": 30,
            "critical": 15
          },
          "format": "<span size='13000' foreground='#a6e3a1'>{icon} </span> {capacity}%",
          "format-warning": "<span size='13000' foreground='#B1E3AD'>{icon} </span> {capacity}%",
          "format-critical": "<span size='13000' foreground='#E38C8F'>{icon} </span> {capacity}%",
          "format-charging": "<span size='13000' foreground='#B1E3AD'> </span>{capacity}%",
          "format-plugged": "<span size='13000' foreground='#B1E3AD'> </span>{capacity}%",
          "format-alt": "<span size='13000' foreground='#B1E3AD'>{icon} </span> {time}",
          "format-full": "<span size='13000' foreground='#B1E3AD'> </span>{capacity}%",
          "format-icons": ["", "", "", "", ""],
          "tooltip-format": "{time}"
        },
        "network": {
          "format-wifi": "<span size='13000' foreground='#f5e0dc'>  </span>{essid}",
          "format-ethernet": "<span size='13000' foreground='#f5e0dc'>󰤭  </span> Disconnected",
          "format-linked": "{ifname} (No IP) ",
          "format-disconnected": "<span size='13000' foreground='#f5e0dc'>  </span>Disconnected",
          "tooltip-format-wifi": "Signal Strenght: {signalStrength}%"
        },
        "pulseaudio": {
            "format": "{icon}  {volume}%",
            "format-muted": "",
            "format-icons": {
                "default": ["", "", " "]
            },
            "on-click": "pavucontrol"
        }
      }
    mode: 0755
    owner: '{{ username_on_the_host.stdout }}'
    group: '{{ username_on_the_host.stdout }}'
    force: true

- name: Insert a block of text before a specific pattern
  ansible.builtin.copy:
    dest: '/home/{{ username_on_the_host.stdout }}/.config/fuzzel/fuzzel.ini'
    content: |
      dpi-aware=yes
      font=RobotoMonoNerdFont-Thin:size=16
      terminal=ghostty
      width=50
      layer=overlay
      exit-on-keyboard-focus-loss=no
      inner-pad=15
      fields=filename,name

      [colors]
      background=282a36ff
      text=f8f8f2ff
      match=8be9fdff
      selection-match=8be9fdff
      selection=44475add
      selection-text=f8f8f2ff
      border=bd93f9ff
    mode: 0755
    owner: '{{ username_on_the_host.stdout }}'
    group: '{{ username_on_the_host.stdout }}'
    force: true

- name: Insert a block of text before a specific pattern
  ansible.builtin.copy:
    dest: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hypridle.conf'
    content: |
      general {
          lock_cmd = pidof hyprlock || hyprlock       # avoid starting multiple hyprlock instances.
          before_sleep_cmd = loginctl lock-session    # lock before suspend.
          after_sleep_cmd = hyprctl dispatch dpms on  # to avoid having to press a key twice to turn on the display.
      }

      listener {
          timeout = 60                                 # 1min.
          on-timeout = brightnessctl -s set 5          # set monitor backlight to minimum, avoid 0 on OLED monitor.
          on-resume = brightnessctl -r                 # monitor backlight restore.
      }

      listener {
          timeout = 120                                 # 2min
          on-timeout = loginctl lock-session            # lock screen when timeout has passed
      }

      listener {
          timeout = 300                                 # 5min
          on-timeout = hyprctl dispatch dpms off        # screen off when timeout has passed
          on-resume = hyprctl dispatch dpms on          # screen on when activity is detected after timeout has fired.
      }

      listener {
          timeout = 900                                # 30min
          on-timeout = systemctl suspend                # suspend pc
      }
    mode: 0755
    owner: '{{ username_on_the_host.stdout }}'
    group: '{{ username_on_the_host.stdout }}'
    force: true

- name: Insert a block of text before a specific pattern
  ansible.builtin.copy:
    dest: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprlock.conf'
    content: |
      background {
          monitor =
          path = ~/.config/assets/backgrounds/nature-landscape-with-lake-mountain.jpg
      }

      input-field {
          monitor =
          size = 200, 50
          outline_thickness = 3
          dots_size = 0.33 # Scale of input-field height, 0.2 - 0.8
          dots_spacing = 0.15 # Scale of dots' absolute size, 0.0 - 1.0
          dots_center = true
          dots_rounding = -1 # -1 default circle, -2 follow input-field rounding
          outer_color = rgb(a6adc8)
          inner_color = rgb(11111b)
          font_color = rgb(a6adc8)
          fade_on_empty = true
          fade_timeout = 1000 # Milliseconds before fade_on_empty is triggered.
          placeholder_text = <i>Input Password...</i> # Text rendered in the input box when it's empty.
          hide_input = false
          rounding = -1 # -1 means complete rounding (circle/oval)
          check_color = rgb(204, 136, 34)
          fail_color = rgb(204, 34, 34) # if authentication failed, changes outer_color and fail message color
          fail_text = <i>$FAIL <b>($ATTEMPTS)</b></i> # can be set to empty
          fail_transition = 100 # transition time in ms between normal outer_color and fail_color
          capslock_color = -1
          numlock_color = -1
          bothlock_color = -1 # when both locks are active. -1 means don't change outer color (same for above)
          invert_numlock = false # change color if numlock is off
          swap_font_color = false # see below
          position = 0, -20
          halign = center
          valign = center
      }

      label {
          monitor =
          text = cmd[update:1000] echo "$TIME"
          color = rgba(a6adc8)
          font_size = 55
          font_family = Fira Semibold
          position = -100, 40
          halign = right
          valign = bottom
          shadow_passes = 5
          shadow_size = 10
      }

      label {
          monitor =
          text = Hello
          color = rgba(a6adc8)
          font_size = 20
          font_family = Fira Semibold
          position = -100, 160
          halign = right
          valign = bottom
          shadow_passes = 5
          shadow_size = 10
      }

      image {
          monitor =
          path = ~/.config/assets/backgrounds/nature-landscape-with-lake-mountain.jpg
          size = 280 # lesser side if not 1:1 ratio
          rounding = -1 # negative values mean circle
          border_size = 4
          border_color = rgb(a6adc8)
          rotate = 0 # degrees, counter-clockwise
          reload_time = -1 # seconds between reloading, 0 to reload with SIGUSR2
      #    reload_cmd =  # command to get new path. if empty, old path will be used. don't run "follow" commands like tail -F
          position = 0, 200
          halign = center
          valign = center
      }
    mode: 0755
    owner: '{{ username_on_the_host.stdout }}'
    group: '{{ username_on_the_host.stdout }}'
    force: true

- name: Insert a block of text before a specific pattern
  ansible.builtin.blockinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    block: |
      windowrulev2 = opacity 1.0 0.80,class:^(.*)$
    marker: '# {mark} windowrulev2 | ANSIBLE MANAGED BLOCK'
    prepend_newline: true
    insertafter: "windowrule = suppressevent maximize, class"
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/etc/sddm.conf.d/default.conf'
    regex: 'Current='
    line: 'Current=sugar-dark'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/.config/fish/config.fish'
    insetafter: '# Commands'
    line: 'fastfetch'
    state: present
