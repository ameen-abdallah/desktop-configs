- name: System configuration | core packages | monitor configuration
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'monitor=,preferred,auto,auto'
    line: |-
      monitor=DP-1,1920x1080@60,0x0,1
      monitor=HDMI-A-1,1920x1080@60,1920x0,1
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: '$terminal = kitty'
    line: '$terminal = ghostty'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: '$fileManager = dolphin'
    line: '$fileManager = dolphin'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: '$menu = wofi'
    line: '$browser = brave'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    line: '$editor = code'
    insertafter: '$browser = brave'
    state: present

- name: Enable sddm
  become: true
  ansible.builtin.systemd:
    name: sddm.service
    enabled: true

- name: Set Fish as the default shell for the user
  ansible.builtin.user:
    name: '{{ username_on_the_host.stdout }}'
    shell: /usr/bin/fish
  become: true

- name: Insert a block of text before a specific pattern
  ansible.builtin.blockinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    block: |
      exec-once=/usr/lib/polkit-kde-authentication-agent-1 # Polkit for privilege management      insertbefore: 'env = XCURSOR_SIZE,24'
      exec-once=/usr/bin/dunst
      exec-once=waybar
    insertbefore: '# exec-once = $terminal'

- name: Insert a block of text before a specific pattern
  ansible.builtin.blockinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    block: |
      # QT
      env = QT_QPA_PLATFORM,wayland;xcb
      env = QT_QPA_PLATFORMTHEME,qt6ct
      env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
      env = QT_AUTO_SCREEN_SCALE_FACTOR,1
      env = QT_STYLE_OVERRIDE,kvantum

      # Toolkit Backend Variables
      env = GDK_BACKEND,wayland,x11,*
      env = SDL_VIDEODRIVER,wayland
      env = CLUTTER_BACKEND,wayland

      # XDG Specifications
      env = XDG_CURRENT_DESKTOP,Hyprland
      env = XDG_SESSION_TYPE,wayland
      env = XDG_SESSION_DESKTOP,Hyprland
    insertbefore: 'env = XCURSOR_SIZE,24'

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'kb_layout = us'
    line: 'kb_layout = dk'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'natural_scroll = false'
    line: 'natural_scroll = true'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'workspace_swipe = false'
    line: 'workspace_swipe = true'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'bind = $mainMod, Q, exec, $terminal'
    line: 'bind = $mainMod, ENTER, exec, $terminal'
    state: present
