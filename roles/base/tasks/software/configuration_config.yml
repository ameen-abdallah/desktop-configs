- name: System configuration | core packages | monitor configuration
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'monitor=,preferred,auto,auto'
    line: |-
      monitor=DP-1,1920x1080@60,0x0,1
      monitor=HDMI-A-1,1920x1080@60,1920x0,1
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: "{{ item.regex }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - line: '$terminal = ghostty'
      regex: "\\$terminal = kitty"
    - line: '$fileManager = dolphin'
      regex: "\\$fileManager = dolphin"
    - line: '$browser = brave'
      regex: "\\$menu = wofi"

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    line: "{{ item.line }}"
    insertafter: "\\$browser = brave"
    state: present
  loop:
    - line: '$menu = fuzzel'
    - line: '$editor = code'

- name: Enable sddm
  become: true
  ansible.builtin.systemd:
    name: sddm.service
    enabled: true

- name: Set Fish as the default shell for the user
  ansible.builtin.user:
    name: '{{ username_on_the_host.stdout }}'
    shell: /usr/bin/fish
  become: true

- name: Insert a block of text before a specific pattern
  ansible.builtin.blockinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    block: |
      exec-once=/usr/lib/polkit-kde-authentication-agent-1 # Polkit for privilege management      insertbefore: 'env = XCURSOR_SIZE,24'
      exec-once=/usr/bin/dunst
      exec-once=waybar
      exec-once = swww-daemon
      exec-once = swww img ~/.config/assets/backgrounds/still-body-water.jpg  --transition-fps 255 --transition-type outer --transition-duration 0.8
      exec-once = hypridle
    marker: '# {mark} Exec once | ANSIBLE MANAGED BLOCK'
    prepend_newline: true
    insertafter: "# exec-once = waybar \\& hyprpaper \\& firefox"
    state: present

- name: Insert a block of text before a specific pattern
  ansible.builtin.blockinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    block: |
      # QT
      env = QT_QPA_PLATFORM,wayland;xcb
      env = QT_QPA_PLATFORMTHEME,qt6ct
      env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
      env = QT_AUTO_SCREEN_SCALE_FACTOR,1
      env = QT_STYLE_OVERRIDE,kvantum

      # Toolkit Backend Variables
      env = GDK_BACKEND,wayland,x11,*
      env = SDL_VIDEODRIVER,wayland
      env = CLUTTER_BACKEND,wayland

      # XDG Specifications
      env = XDG_CURRENT_DESKTOP,Hyprland
      env = XDG_SESSION_TYPE,wayland
      env = XDG_SESSION_DESKTOP,Hyprland
    marker: '# {mark} Environment Variable | ANSIBLE MANAGED BLOCK'
    prepend_newline: true
    insertafter: 'env = HYPRCURSOR_SIZE,24'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'    
    insertafter: '# Example binds'
    line: "{{ item.line }}"
    state: present
  loop:
    - line: 'bind = $mainMod, RETURN, exec, $terminal'
    - line: 'bind = $mainMod, B, exec, $browser'
    - line: 'bind = $mainMod, A, exec, $menu'
    - line: 'bind = Ctrl, Escape, exec, killall waybar || waybar'
    - line: "bind = $mainMod, L, exec, hyprlock"
    - line: "bind = $mainMod, ESCAPE, exec, wlogout"

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'    
    regex: "{{ item.regex }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - line: 'bind = $mainMod, M, fullscreen, 1'
      regex: "bind = \\$mainMod, M, exit,"
    - line: 'bind = $mainMod, Q, killactive,'
      regex: "bind = \\$mainMod, Q, exec, \\$terminal"
    - line: 'bind = $mainMod, V, exec, code'
      regex: "bind = \\$mainMod, V, togglefloating,,"

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'kb_layout = us'
    line: 'kb_layout = dk'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'natural_scroll = false'
    line: 'natural_scroll = true'
    state: present

- name: System configuration | core packages | primary applications
  ansible.builtin.lineinfile:
    path: '/home/{{ username_on_the_host.stdout }}/.config/hypr/hyprland.conf'
    regex: 'workspace_swipe = false'
    line: 'workspace_swipe = true'
    state: present

- name: Insert a block of text before a specific pattern
  ansible.builtin.copy:
    dest: '/home/{{ username_on_the_host.stdout }}/.config/waybar/config.jsonc'
    content: |
      {
        "position": "top",
        "modules-left": ["hyprland/workspaces"],
        "modules-center": ["hyprland/window"],
        "modules-right": ["network", "pulseaudio", "battery", "clock"],
        "clock": {
          "format": "<span foreground='#f5c2e7'>   </span>{:%a %d %H:%M}",
          "tooltip-format": "<big>{:%Y %B}</big>\n<tt><small>{calendar}</small></tt>"
        },
        "battery": {
          "states": {
            "warning": 30,
            "critical": 15
          },
          "format": "<span size='13000' foreground='#a6e3a1'>{icon} </span> {capacity}%",
          "format-warning": "<span size='13000' foreground='#B1E3AD'>{icon} </span> {capacity}%",
          "format-critical": "<span size='13000' foreground='#E38C8F'>{icon} </span> {capacity}%",
          "format-charging": "<span size='13000' foreground='#B1E3AD'> </span>{capacity}%",
          "format-plugged": "<span size='13000' foreground='#B1E3AD'> </span>{capacity}%",
          "format-alt": "<span size='13000' foreground='#B1E3AD'>{icon} </span> {time}",
          "format-full": "<span size='13000' foreground='#B1E3AD'> </span>{capacity}%",
          "format-icons": ["", "", "", "", ""],
          "tooltip-format": "{time}"
        },
        "network": {
          "format-wifi": "<span size='13000' foreground='#f5e0dc'>  </span>{essid}",
          "format-ethernet": "<span size='13000' foreground='#f5e0dc'>󰤭  </span> Disconnected",
          "format-linked": "{ifname} (No IP) ",
          "format-disconnected": "<span size='13000' foreground='#f5e0dc'>  </span>Disconnected",
          "tooltip-format-wifi": "Signal Strenght: {signalStrength}%"
        },
        "pulseaudio": {
            "format": "{icon}  {volume}%",
            "format-muted": "",
            "format-icons": {
                "default": ["", "", " "]
            },
            "on-click": "pavucontrol"
        }
      }
    mode: 0755
    owner: '{{ username_on_the_host.stdout }}'
    group: '{{ username_on_the_host.stdout }}'
    force: true   
